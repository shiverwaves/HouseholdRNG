<svg viewBox="0 0 1400 900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font: bold 18px sans-serif; text-anchor: middle; }
      .section-title { font: bold 14px sans-serif; text-anchor: middle; }
      .component { font: 12px sans-serif; text-anchor: middle; }
      .detail { font: 10px sans-serif; text-anchor: middle; fill: #666; }
      .users { fill: #e8f5e8; stroke: #4caf50; }
      .frontend { fill: #e3f2fd; stroke: #2196f3; }
      .loadbalancer { fill: #fff3e0; stroke: #ff9800; }
      .backend { fill: #f3e5f5; stroke: #9c27b0; }
      .cache { fill: #ffebee; stroke: #f44336; }
      .database { fill: #e0f2f1; stroke: #009688; }
      .storage { fill: #fafafa; stroke: #757575; }
      .monitoring { fill: #f1f8e9; stroke: #689f38; }
    </style>
    <marker id="arrow" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#666" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="700" y="25" class="title">Tax Practice App - Multi-User Infrastructure</text>
  
  <!-- Users Section -->
  <rect x="50" y="60" width="200" height="150" class="users" stroke-width="2" rx="8"/>
  <text x="150" y="85" class="section-title">Concurrent Users</text>
  
  <circle cx="100" cy="120" r="15" fill="#4caf50"/>
  <text x="100" y="125" class="component" fill="white">👤</text>
  <text x="100" y="150" class="detail">Student 1</text>
  
  <circle cx="150" cy="120" r="15" fill="#4caf50"/>
  <text x="150" y="125" class="component" fill="white">👤</text>
  <text x="150" y="150" class="detail">Student 2</text>
  
  <circle cx="200" cy="120" r="15" fill="#4caf50"/>
  <text x="200" y="125" class="component" fill="white">👤</text>
  <text x="200" y="150" class="detail">Student N</text>
  
  <text x="150" y="185" class="detail">50-200 concurrent users</text>
  <text x="150" y="200" class="detail">Each 30-60 min sessions</text>
  
  <!-- CDN/Frontend -->
  <rect x="300" y="60" width="180" height="150" class="frontend" stroke-width="2" rx="8"/>
  <text x="390" y="85" class="section-title">Frontend (CDN)</text>
  
  <rect x="320" y="100" width="140" height="40" fill="#bbdefb" stroke="#1976d2" rx="4"/>
  <text x="390" y="115" class="component">React SPA Bundle</text>
  <text x="390" y="130" class="detail">Cached at edge locations</text>
  
  <text x="390" y="160" class="detail">CloudFront / CloudFlare</text>
  <text x="390" y="175" class="detail">Global distribution</text>
  <text x="390" y="190" class="detail">Static asset caching</text>
  
  <!-- Load Balancer -->
  <rect x="520" y="60" width="160" height="150" class="loadbalancer" stroke-width="2" rx="8"/>
  <text x="600" y="85" class="section-title">Load Balancer</text>
  
  <rect x="540" y="100" width="120" height="40" fill="#ffcc80" stroke="#f57c00" rx="4"/>
  <text x="600" y="115" class="component">ALB / Nginx</text>
  <text x="600" y="130" class="detail">SSL Termination</text>
  
  <text x="600" y="160" class="detail">Session Affinity</text>
  <text x="600" y="175" class="detail">Health Checks</text>
  <text x="600" y="190" class="detail">Auto-scaling triggers</text>
  
  <!-- Backend App Servers -->
  <rect x="50" y="280" width="630" height="200" class="backend" stroke-width="2" rx="8"/>
  <text x="365" y="305" class="section-title">Backend Application Servers (Kubernetes)</text>
  
  <!-- Pod 1 -->
  <rect x="80" y="320" width="120" height="80" fill="#e1bee7" stroke="#8e24aa" rx="4"/>
  <text x="140" y="340" class="component">Node.js Pod 1</text>
  <text x="140" y="355" class="detail">Auth, Progress</text>
  <text x="140" y="370" class="detail">CPU: 0.5 cores</text>
  <text x="140" y="385" class="detail">Memory: 1GB</text>
  
  <!-- Pod 2 -->
  <rect x="220" y="320" width="120" height="80" fill="#e1bee7" stroke="#8e24aa" rx="4"/>
  <text x="280" y="340" class="component">Node.js Pod 2</text>
  <text x="280" y="355" class="detail">Case Generation</text>
  <text x="280" y="370" class="detail">CPU: 1 core</text>
  <text x="280" y="385" class="detail">Memory: 2GB</text>
  
  <!-- Pod 3 -->
  <rect x="360" y="320" width="120" height="80" fill="#e1bee7" stroke="#8e24aa" rx="4"/>
  <text x="420" y="340" class="component">Node.js Pod 3</text>
  <text x="420" y="355" class="detail">Document Gen</text>
  <text x="420" y="370" class="detail">CPU: 0.5 cores</text>
  <text x="420" y="385" class="detail">Memory: 1GB</text>
  
  <!-- Pod N -->
  <rect x="500" y="320" width="120" height="80" fill="#e1bee7" stroke="#8e24aa" rx="4"/>
  <text x="560" y="340" class="component">Node.js Pod N</text>
  <text x="560" y="355" class="detail">Auto-scaled</text>
  <text x="560" y="370" class="detail">2-12 replicas</text>
  <text x="560" y="385" class="detail">Based on CPU/Memory</text>
  
  <text x="365" y="430" class="detail">HPA: Scale 2-12 pods based on CPU (70%) and Memory (80%)</text>
  <text x="365" y="450" class="detail">Resource requests: CPU 0.5, Memory 1GB | Limits: CPU 2, Memory 4GB</text>
  
  <!-- Cache Layer -->
  <rect x="720" y="60" width="180" height="420" class="cache" stroke-width="2" rx="8"/>
  <text x="810" y="85" class="section-title">Cache Layer</text>
  
  <rect x="740" y="100" width="140" height="60" fill="#ffcdd2" stroke="#d32f2f" rx="4"/>
  <text x="810" y="120" class="component">Redis Cluster</text>
  <text x="810" y="135" class="detail">Session storage</text>
  <text x="810" y="150" class="detail">Case state caching</text>
  
  <rect x="740" y="180" width="140" height="80" fill="#ffcdd2" stroke="#d32f2f" rx="4"/>
  <text x="810" y="205" class="component">Application Cache</text>
  <text x="810" y="220" class="detail">• Generated households</text>
  <text x="810" y="235" class="detail">• Tax calculation rules</text>
  <text x="810" y="250" class="detail">• BLS/Census data</text>
  
  <rect x="740" y="280" width="140" height="80" fill="#ffcdd2" stroke="#d32f2f" rx="4"/>
  <text x="810" y="305" class="component">Rate Limiting</text>
  <text x="810" y="320" class="detail">• Case generation limits</text>
  <text x="810" y="335" class="detail">• API throttling</text>
  <text x="810" y="350" class="detail">• User session limits</text>
  
  <text x="810" y="390" class="detail">TTL Configuration:</text>
  <text x="810" y="405" class="detail">• Sessions: 2 hours</text>
  <text x="810" y="420" class="detail">• Generated cases: 24 hours</text>
  <text x="810" y="435" class="detail">• Tax rules: 1 week</text>
  <text x="810" y="450" class="detail">• Static data: 1 month</text>
  
  <!-- Database -->
  <rect x="950" y="60" width="200" height="280" class="database" stroke-width="2" rx="8"/>
  <text x="1050" y="85" class="section-title">Database Layer</text>
  
  <rect x="970" y="100" width="160" height="60" fill="#b2dfdb" stroke="#00695c" rx="4"/>
  <text x="1050" y="120" class="component">PostgreSQL Primary</text>
  <text x="1050" y="135" class="detail">Users, Progress, Cases</text>
  <text x="1050" y="150" class="detail">Write operations</text>
  
  <rect x="970" y="180" width="160" height="60" fill="#b2dfdb" stroke="#00695c" rx="4"/>
  <text x="1050" y="200" class="component">Read Replicas (2x)</text>
  <text x="1050" y="215" class="detail">Analytics queries</text>
  <text x="1050" y="230" class="detail">Progress reporting</text>
  
  <rect x="970" y="260" width="160" height="60" fill="#b2dfdb" stroke="#00695c" rx="4"/>
  <text x="1050" y="280" class="component">Connection Pooling</text>
  <text x="1050" y="295" class="detail">PgBouncer</text>
  <text x="1050" y="310" class="detail">Max 100 connections</text>
  
  <!-- File Storage -->
  <rect x="1200" y="60" width="180" height="280" class="storage" stroke-width="2" rx="8"/>
  <text x="1290" y="85" class="section-title">File Storage</text>
  
  <rect x="1220" y="100" width="140" height="60" fill="#f5f5f5" stroke="#424242" rx="4"/>
  <text x="1290" y="120" class="component">Object Storage</text>
  <text x="1290" y="135" class="detail">S3 / Cloud Storage</text>
  <text x="1290" y="150" class="detail">Generated documents</text>
  
  <rect x="1220" y="180" width="140" height="60" fill="#f5f5f5" stroke="#424242" rx="4"/>
  <text x="1290" y="200" class="component">Static Data</text>
  <text x="1290" y="215" class="detail">Tax forms, templates</text>
  <text x="1290" y="230" class="detail">BLS/Census datasets</text>
  
  <rect x="1220" y="260" width="140" height="60" fill="#f5f5f5" stroke="#424242" rx="4"/>
  <text x="1290" y="280" class="component">Backup Storage</text>
  <text x="1290" y="295" class="detail">Database backups</text>
  <text x="1290" y="310" class="detail">Application state</text>
  
  <!-- Monitoring -->
  <rect x="50" y="520" width="630" height="120" class="monitoring" stroke-width="2" rx="8"/>
  <text x="365" y="545" class="section-title">Monitoring & Observability</text>
  
  <rect x="80" y="560" width="140" height="60" fill="#dcedc8" stroke="#558b2f" rx="4"/>
  <text x="150" y="580" class="component">Metrics</text>
  <text x="150" y="595" class="detail">Prometheus + Grafana</text>
  <text x="150" y="610" class="detail">CPU, Memory, Response times</text>
  
  <rect x="240" y="560" width="140" height="60" fill="#dcedc8" stroke="#558b2f" rx="4"/>
  <text x="310" y="580" class="component">Logging</text>
  <text x="310" y="595" class="detail">ELK Stack / CloudWatch</text>
  <text x="310" y="610" class="detail">Application & access logs</text>
  
  <rect x="400" y="560" width="140" height="60" fill="#dcedc8" stroke="#558b2f" rx="4"/>
  <text x="470" y="580" class="component">Alerting</text>
  <text x="470" y="595" class="detail">PagerDuty / Slack</text>
  <text x="470" y="610" class="detail">High CPU, failed requests</text>
  
  <rect x="560" y="560" width="100" height="60" fill="#dcedc8" stroke="#558b2f" rx="4"/>
  <text x="610" y="580" class="component">Tracing</text>
  <text x="610" y="595" class="detail">Jaeger</text>
  <text x="610" y="610" class="detail">Request flow</text>
  
  <!-- Performance Metrics -->
  <rect x="720" y="520" width="660" height="120" class="monitoring" stroke-width="2" rx="8"/>
  <text x="1050" y="545" class="section-title">Expected Performance Characteristics</text>
  
  <text x="750" y="570" class="detail">🎯 Target Metrics (200 concurrent users):</text>
  <text x="750" y="590" class="detail">• Case Generation: &lt; 2 seconds (95th percentile)</text>
  <text x="750" y="605" class="detail">• API Response Time: &lt; 200ms (average)</text>
  <text x="750" y="620" class="detail">• Auto-save Operations: &lt; 100ms</text>
  
  <text x="1050" y="570" class="detail">📊 Resource Planning:</text>
  <text x="1050" y="590" class="detail">• Backend: 2-12 pods (auto-scale)</text>
  <text x="1050" y="605" class="detail">• Database: 4 vCPU, 16GB RAM</text>
  <text x="1050" y="620" class="detail">• Redis: 2GB memory cluster</text>
  
  <!-- Cost Optimization -->
  <rect x="50" y="680" width="1330" height="80" class="storage" stroke-width="2" rx="8"/>
  <text x="715" y="705" class="section-title">Cost Optimization Strategies</text>
  
  <text x="80" y="730" class="detail">🏷️ Spot Instances: Use for non-critical workloads (development environments)</text>
  <text x="80" y="745" class="detail">📈 Auto-scaling: Scale down during off-hours (nights/weekends when students aren't practicing)</text>
  
  <text x="700" y="730" class="detail">💾 Intelligent Caching: Cache generated households for 24h to reduce computation</text>
  <text x="700" y="745" class="detail">🔄 Resource Scheduling: Batch case generation during low-traffic periods</text>
  
  <!-- Data Flow Arrows -->
  <line x1="250" y1="135" x2="300" y2="135" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="480" y1="135" x2="520" y2="135" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="680" y1="135" x2="720" y2="135" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="600" y1="210" x2="600" y2="280" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="680" y1="360" x2="720" y2="200" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="900" y1="200" x2="950" y2="200" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="1150" y1="200" x2="1200" y2="200" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  
  <!-- Traffic Flow Labels -->
  <text x="275" y="125" class="detail">HTTPS</text>
  <text x="500" y="125" class="detail">Static Assets</text>
  <text x="650" y="125" class="detail">API Calls</text>
  <text x="620" y="250" class="detail">Load Balance</text>
  <text x="700" y="180" class="detail">Cache Check</text>
  <text x="925" y="190" class="detail">DB Queries</text>
  <text x="1175" y="190" class="detail">File Storage</text>
</svg>